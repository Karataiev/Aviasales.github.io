{"ast":null,"code":"import actionNames from \"./actionNames\";\nimport ticketList from '../Components/ticketList.json';\nconst getDefaultTickets = () => {\n  let {\n    tickets\n  } = ticketList;\n  return tickets.sort((a, b) => a.price > b.price ? 1 : -1);\n};\nconst defaultState = {\n  currency: \"RUB\",\n  tickets: [...getDefaultTickets()],\n  filters: [{\n    id: 0,\n    label: 'Без пересадок',\n    checked: true\n  }, {\n    id: 1,\n    label: '1 пересадка',\n    checked: true\n  }, {\n    id: 2,\n    label: '2 пересадки',\n    checked: true\n  }, {\n    id: 3,\n    label: '3 пересадки',\n    checked: true\n  }],\n  exchangeRates: {\n    USD: 0.013612,\n    EUR: 0.011612,\n    RUB: 1\n  }\n};\nfunction currencyReducer(state = defaultState, action) {\n  switch (action.type) {\n    case actionNames.CURRENCY_CHANGE:\n      const {\n        currencyName\n      } = action;\n      let tickets = [...getDefaultTickets()];\n      tickets = tickets.map(ticket => ({\n        ...ticket,\n        price: ~~(ticket.price * state.exchangeRates[currencyName])\n      }));\n      return {\n        ...state,\n        currency: currencyName,\n        tickets\n      };\n    case actionNames.EXCHANGE_RATES:\n      const {\n        exchangeRates\n      } = action;\n      return {\n        ...state,\n        exchangeRates\n      };\n    case actionNames.FILTERS:\n      const {\n        filterName\n      } = action;\n      const newFilters = state.filters.map(filter => {\n        if (filter.id === filterName) return {\n          ...filter,\n          checked: !filter.checked\n        };\n        return {\n          ...filter\n        };\n      });\n      const newTickets = [...getDefaultTickets()].filter(ticket => newFilters.find(filter => filter.id === ticket.stops).checked);\n      return {\n        ...state,\n        filters: newFilters,\n        tickets: newTickets\n      };\n    case actionNames.ONLY_FILTER:\n      const {\n        onlyFilter\n      } = action;\n      let onlyChecked = state.filters;\n      onlyChecked = onlyChecked.map(filter => ({\n        ...filter,\n        checked: onlyFilter === filter.id\n      }));\n      const newTickets_2 = [...getDefaultTickets()].filter(ticket => onlyChecked.find(filter => filter.id === ticket.stops).checked);\n      return {\n        ...state,\n        filters: onlyChecked,\n        tickets: newTickets_2\n      };\n    case actionNames.CHECK_ALL:\n      const {\n        toggleCheckAllName\n      } = action;\n      let allChecked = state.filters;\n      if (toggleCheckAllName === 'All') {\n        allChecked = allChecked.map(filter => ({\n          ...filter,\n          checked: !allChecked.checked\n        }));\n      }\n      return {\n        ...state,\n        filters: allChecked,\n        tickets: [...defaultState.tickets]\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n}\nexport default currencyReducer;","map":{"version":3,"names":["actionNames","ticketList","getDefaultTickets","tickets","sort","a","b","price","defaultState","currency","filters","id","label","checked","exchangeRates","USD","EUR","RUB","currencyReducer","state","action","type","CURRENCY_CHANGE","currencyName","map","ticket","EXCHANGE_RATES","FILTERS","filterName","newFilters","filter","newTickets","find","stops","ONLY_FILTER","onlyFilter","onlyChecked","newTickets_2","CHECK_ALL","toggleCheckAllName","allChecked"],"sources":["D:/Programing/Aviasales.github.io/src/Redux/currencyReducer.js"],"sourcesContent":["import actionNames from \"./actionNames\";\r\nimport ticketList from '../Components/ticketList.json';\r\n\r\nconst getDefaultTickets = () => {\r\n    let { tickets } = ticketList;\r\n    return tickets.sort((a, b) => a.price > b.price ? 1 : -1);\r\n}\r\n\r\nconst defaultState = {\r\n    currency: \"RUB\",\r\n    tickets: [...getDefaultTickets()],\r\n    filters: [\r\n        { id: 0, label: 'Без пересадок', checked: true },\r\n        { id: 1, label: '1 пересадка',  checked: true },\r\n        { id: 2, label: '2 пересадки',  checked: true },\r\n        { id: 3, label: '3 пересадки',  checked: true }\r\n    ],\r\n    exchangeRates: {\r\n        USD: 0.013612,\r\n        EUR: 0.011612,\r\n        RUB: 1\r\n    },\r\n}\r\n\r\nfunction currencyReducer (state = defaultState, action) {\r\n    switch(action.type) {\r\n        case actionNames.CURRENCY_CHANGE:\r\n            const { currencyName } = action;\r\n            let tickets = [...getDefaultTickets()];\r\n            tickets = tickets.map((ticket) => ({...ticket, price: ~~(ticket.price * state.exchangeRates[currencyName])}))\r\n            return {...state, currency: currencyName, tickets}\r\n\r\n        case actionNames.EXCHANGE_RATES: \r\n            const { exchangeRates } = action;\r\n            return {...state, exchangeRates}\r\n\r\n        case actionNames.FILTERS: \r\n            const { filterName } = action;\r\n            const newFilters = state.filters.map((filter) => {\r\n                if (filter.id === filterName) return {...filter, checked: !filter.checked};\r\n                return {...filter}\r\n            })\r\n            const newTickets = [...getDefaultTickets()].filter((ticket) => newFilters.find(filter => filter.id === ticket.stops).checked)\r\n                return {...state, filters: newFilters, tickets: newTickets }\r\n       \r\n        case actionNames.ONLY_FILTER:\r\n            const { onlyFilter } = action;\r\n            let onlyChecked = state.filters;\r\n            onlyChecked = onlyChecked.map((filter) => ({...filter, checked: onlyFilter === filter.id}))\r\n            \r\n            const newTickets_2 = [...getDefaultTickets()].filter((ticket) => onlyChecked.find(filter => filter.id === ticket.stops).checked)\r\n                return {...state, filters: onlyChecked, tickets: newTickets_2 }\r\n        \r\n        case actionNames.CHECK_ALL:\r\n            const { toggleCheckAllName } = action;\r\n            let allChecked = state.filters;\r\n            if (toggleCheckAllName === 'All') {\r\n               allChecked = allChecked.map((filter) => ({...filter, checked: !allChecked.checked}))\r\n            }\r\n            return {...state, filters: allChecked, tickets: [...defaultState.tickets]}\r\n\r\n        default:\r\n            return {...state};  \r\n    }\r\n}\r\n\r\nexport default currencyReducer;\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,UAAU,MAAM,+BAA+B;AAEtD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC5B,IAAI;IAAEC;EAAQ,CAAC,GAAGF,UAAU;EAC5B,OAAOE,OAAO,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,KAAK,GAAGD,CAAC,CAACC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7D,CAAC;AAED,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAE,KAAK;EACfN,OAAO,EAAE,CAAC,GAAGD,iBAAiB,CAAC,CAAC,CAAC;EACjCQ,OAAO,EAAE,CACL;IAAEC,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,eAAe;IAAEC,OAAO,EAAE;EAAK,CAAC,EAChD;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,aAAa;IAAGC,OAAO,EAAE;EAAK,CAAC,EAC/C;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,aAAa;IAAGC,OAAO,EAAE;EAAK,CAAC,EAC/C;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,aAAa;IAAGC,OAAO,EAAE;EAAK,CAAC,CAClD;EACDC,aAAa,EAAE;IACXC,GAAG,EAAE,QAAQ;IACbC,GAAG,EAAE,QAAQ;IACbC,GAAG,EAAE;EACT;AACJ,CAAC;AAED,SAASC,eAAeA,CAAEC,KAAK,GAAGX,YAAY,EAAEY,MAAM,EAAE;EACpD,QAAOA,MAAM,CAACC,IAAI;IACd,KAAKrB,WAAW,CAACsB,eAAe;MAC5B,MAAM;QAAEC;MAAa,CAAC,GAAGH,MAAM;MAC/B,IAAIjB,OAAO,GAAG,CAAC,GAAGD,iBAAiB,CAAC,CAAC,CAAC;MACtCC,OAAO,GAAGA,OAAO,CAACqB,GAAG,CAAEC,MAAM,KAAM;QAAC,GAAGA,MAAM;QAAElB,KAAK,EAAE,CAAC,EAAEkB,MAAM,CAAClB,KAAK,GAAGY,KAAK,CAACL,aAAa,CAACS,YAAY,CAAC;MAAC,CAAC,CAAC,CAAC;MAC7G,OAAO;QAAC,GAAGJ,KAAK;QAAEV,QAAQ,EAAEc,YAAY;QAAEpB;MAAO,CAAC;IAEtD,KAAKH,WAAW,CAAC0B,cAAc;MAC3B,MAAM;QAAEZ;MAAc,CAAC,GAAGM,MAAM;MAChC,OAAO;QAAC,GAAGD,KAAK;QAAEL;MAAa,CAAC;IAEpC,KAAKd,WAAW,CAAC2B,OAAO;MACpB,MAAM;QAAEC;MAAW,CAAC,GAAGR,MAAM;MAC7B,MAAMS,UAAU,GAAGV,KAAK,CAACT,OAAO,CAACc,GAAG,CAAEM,MAAM,IAAK;QAC7C,IAAIA,MAAM,CAACnB,EAAE,KAAKiB,UAAU,EAAE,OAAO;UAAC,GAAGE,MAAM;UAAEjB,OAAO,EAAE,CAACiB,MAAM,CAACjB;QAAO,CAAC;QAC1E,OAAO;UAAC,GAAGiB;QAAM,CAAC;MACtB,CAAC,CAAC;MACF,MAAMC,UAAU,GAAG,CAAC,GAAG7B,iBAAiB,CAAC,CAAC,CAAC,CAAC4B,MAAM,CAAEL,MAAM,IAAKI,UAAU,CAACG,IAAI,CAACF,MAAM,IAAIA,MAAM,CAACnB,EAAE,KAAKc,MAAM,CAACQ,KAAK,CAAC,CAACpB,OAAO,CAAC;MACzH,OAAO;QAAC,GAAGM,KAAK;QAAET,OAAO,EAAEmB,UAAU;QAAE1B,OAAO,EAAE4B;MAAW,CAAC;IAEpE,KAAK/B,WAAW,CAACkC,WAAW;MACxB,MAAM;QAAEC;MAAW,CAAC,GAAGf,MAAM;MAC7B,IAAIgB,WAAW,GAAGjB,KAAK,CAACT,OAAO;MAC/B0B,WAAW,GAAGA,WAAW,CAACZ,GAAG,CAAEM,MAAM,KAAM;QAAC,GAAGA,MAAM;QAAEjB,OAAO,EAAEsB,UAAU,KAAKL,MAAM,CAACnB;MAAE,CAAC,CAAC,CAAC;MAE3F,MAAM0B,YAAY,GAAG,CAAC,GAAGnC,iBAAiB,CAAC,CAAC,CAAC,CAAC4B,MAAM,CAAEL,MAAM,IAAKW,WAAW,CAACJ,IAAI,CAACF,MAAM,IAAIA,MAAM,CAACnB,EAAE,KAAKc,MAAM,CAACQ,KAAK,CAAC,CAACpB,OAAO,CAAC;MAC5H,OAAO;QAAC,GAAGM,KAAK;QAAET,OAAO,EAAE0B,WAAW;QAAEjC,OAAO,EAAEkC;MAAa,CAAC;IAEvE,KAAKrC,WAAW,CAACsC,SAAS;MACtB,MAAM;QAAEC;MAAmB,CAAC,GAAGnB,MAAM;MACrC,IAAIoB,UAAU,GAAGrB,KAAK,CAACT,OAAO;MAC9B,IAAI6B,kBAAkB,KAAK,KAAK,EAAE;QAC/BC,UAAU,GAAGA,UAAU,CAAChB,GAAG,CAAEM,MAAM,KAAM;UAAC,GAAGA,MAAM;UAAEjB,OAAO,EAAE,CAAC2B,UAAU,CAAC3B;QAAO,CAAC,CAAC,CAAC;MACvF;MACA,OAAO;QAAC,GAAGM,KAAK;QAAET,OAAO,EAAE8B,UAAU;QAAErC,OAAO,EAAE,CAAC,GAAGK,YAAY,CAACL,OAAO;MAAC,CAAC;IAE9E;MACI,OAAO;QAAC,GAAGgB;MAAK,CAAC;EACzB;AACJ;AAEA,eAAeD,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}